name: main

on: [ push ]

jobs:
  # --------------------------------------------------------------------------------
  # Lint stage
  # --------------------------------------------------------------------------------
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '22.x'
      - name: install pnpm
        run: npm install -g pnpm
      - name: install dependencies
        run: pnpm i --frozen-lockfile
      - name: lint
        run: pnpm lint

  # --------------------------------------------------------------------------------
  # Build stage
  # --------------------------------------------------------------------------------
  build:
    runs-on: ubuntu-latest
    needs: [ lint ]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '22.x'
      - name: install pnpm
        run: npm install -g pnpm
      - name: install dependencies
        run: pnpm i --frozen-lockfile
      - name: build the application
        run: pnpm build

  build-docker:
    runs-on: ubuntu-latest
    needs: [ lint ]
    env:
      PORT: 8080
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
      - name: build the docker image
        run: docker build .

  # --------------------------------------------------------------------------------
  # Deploy stage
  # --------------------------------------------------------------------------------
  deploy-staging:
    runs-on: ubuntu-latest
    needs: [ build-docker, build ]
    if: github.ref == 'refs/heads/main' && success()
    environment: production
    permissions:
      contents: read
      id-token: write
    steps:
      - uses: actions/checkout@v4
      - uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: ${{ secrets.PREPROD_IDENTITY_PROVIDER }}
          service_account: ${{ secrets.PREPROD_SERVICE_ACCOUNT }}
      - id: deploy
        uses: google-github-actions/deploy-cloudrun@v2
        with:
          service: pages
          region: europe-west1
          project_id: inrich-preprod
          source: ./
          flags: '--concurrency=100 --timeout=60 --min-instances=1 --max-instances=3 --memory=512Mi --cpu=1 --platform=managed --allow-unauthenticated'
      - name: show output
        run: echo ${{ steps.deploy.outputs.url }}

  deploy-prod:
    runs-on: ubuntu-latest
    needs: [ build-docker, build ]
    if: github.ref == 'refs/heads/main' && success()
    environment: production
    permissions:
      contents: read
      id-token: write
    steps:
      - uses: actions/checkout@v4
      - uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: ${{ secrets.PROD_IDENTITY_PROVIDER }}
          service_account: ${{ secrets.PROD_SERVICE_ACCOUNT }}
      - id: deploy
        uses: google-github-actions/deploy-cloudrun@v2
        with:
          service: pages
          region: europe-west1
          project_id: inrich-f9a0a
          source: ./
          flags: '--concurrency=100 --timeout=60 --min-instances=1 --max-instances=3 --memory=512Mi --cpu=1 --platform=managed --allow-unauthenticated'
      - name: show output
        run: echo ${{ steps.deploy.outputs.url }}
